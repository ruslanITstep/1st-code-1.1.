#include <iostream>
using namespace std;

// класс описывает простой инвентарь игрового персонажа
class inventory {
public:
    inventory();
    ~inventory();
    void add(string some_item);
    void remove(string some_item);
    void open();
private:
    int item_counter; // количество предметов в инвентаре
    string* items; // список предметов в инвентаре
};

inventory::inventory() { // конструктор; изначально у нашего протагониста всего три вещи
    item_counter = 3;
    items = new string[item_counter];
    items[0] = "простая одежда";
    items[1] = "железный кинжал";
    items[2] = "буханка хлеба";
}

inventory::~inventory() { // деструктор; не забываем освободить память!
    delete[] items;
    items = 0;
}

void inventory::open() { // функция демонстрирует содержимое инвентаря
    for (int i = 0; i < item_counter; i++) {
        cout << i + 1 << " " << items[i] << endl;
    }
    cout << endl;
}

void inventory::add(string some_item) { // функция позволяет добавить предмет в инвентарь
    item_counter++; // количество предметов увеличивается на единицу
    string* temp = new string[item_counter]; // создается новый массив
    for (int i = 0; i < item_counter - 1; i++) temp[i] = items[i]; // в новый массив копируются все данные из старого
    temp[item_counter - 1] = some_item; // последним записываем добавленный предмет
    delete[] items; // удаляем старый массив и освобождаем память
    items = temp; // присваеваем переменной items адрес нового массива
    temp = 0; // удаляем временный указатель
};

void inventory::remove(string some_item) { //функция удаляет предмет из инвентаря; если названного предмета в инвентаре нет, \ то функция ничего не делает
    int search; // Переменная,которая нужна для того,чтобы если поиск обнаружит предмет,который есть в инвентаре и его нужно удалить,то числовое значение массива записывается сюда
    for (int i = 0; i < item_counter; i++) {// цикл поисковик
        if (items[i] == some_item) {
            search = i;
            //если он обнаружит то,что нам нужно,далее идет это:    P.s можно было обойтись без переменной search.Но я считаю так сделано удобнее 
            if (search != item_counter - 1) { //Проверка на то,что если предмет,который стоит последним нужно удалить,то ничего делать не не надо. Он и так исчезнет чуть позже). Но если он не последнее число,то происходит смещение массива
                for (int i = search; i < item_counter - 1; i++) {
                    items[i] = items[i + 1];
                }
            }
            item_counter--;
            string* temp = new string[item_counter];// Создается новый массив
            for (int i = 0; i < item_counter - 1; i++) temp[i] = items[i]; //Заполнение массива
            temp[item_counter - 1] = items[item_counter - 1]; //Последнее число не заполняется в цикле,поэтому нужна эта строчка
            delete[] items; // удаляем старый массив и освобождаем память
            items = temp; // присваеваем переменной items адрес нового массиваv
            temp = 0;
            break;
        }
        else if(i==item_counter-1) { // Если вы пытаетесь удаlить то,чего у вас в инвентаре нет
            cout << "Ошибка. Вы пытaетесь удалить предмет,которого у вас нет в инвентаdре" << endl;
        }
    }


    



}


int main() {
    setlocale(0, "rus");
    inventory my_inventory;
    my_inventory.open();
    my_inventory.add("oskolok");
    my_inventory.open();
    my_inventory.add("Дриклабрус");
    my_inventory.open();
    my_inventory.remove("Дриклабрус");
    my_inventory.open();
}
